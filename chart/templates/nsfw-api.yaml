---
apiVersion: v1
data:
  config.py: |
    svc = {
        'kogito_url' : 'http://{{ include "kogito.fullname" . }}:8081/nsfw',
        'tfserving_url' : 'http://{{ include "tfserving.fullname" . }}:8501/v1/models/test_model:predict'
    }
kind: ConfigMap
metadata:
  name: apiconfig
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "nsfwapi.fullname" . }}
  labels:
    {{- include "nsfwapi.labels" . | nindent 4 }}
spec:
  ports:
  - name: 5000-tcp
    port: 5000
    protocol: TCP
    targetPort: 5000
  selector:
    {{- include "nsfwapi.selectorLabels" . | nindent 6 }}
  sessionAffinity: None
  type: ClusterIP
status:
  loadBalancer: {}
---
apiVersion: image.openshift.io/v1
kind: ImageStream
metadata:
  name: {{ include "nsfwapi.fullname" . }}
  labels:
    {{- include "nsfwapi.labels" . | nindent 4 }}
  creationTimestamp: null
spec:
  lookupPolicy:
    local: false
  tags:
  - annotations:
      openshift.io/imported-from: eformat/pet-battle-nsfw-api:latest
    from:
      kind: DockerImage
      name: {{ .Values.image.nsfwapi.image }}
    importPolicy: {}
    name: latest
    referencePolicy:
      type: Source
---
apiVersion: apps.openshift.io/v1
kind: DeploymentConfig
metadata:
  name: {{ include "nsfwapi.fullname" . }}
  labels:
    {{- include "nsfwapi.labels" . | nindent 4 }}
spec:
  replicas: 1
  revisionHistoryLimit: 10
  selector:
    {{- include "nsfwapi.selectorLabels" . | nindent 4 }}
  strategy:
    activeDeadlineSeconds: 21600
    resources: {}
    rollingParams:
      intervalSeconds: 1
      maxSurge: 25%
      maxUnavailable: 25%
      timeoutSeconds: 600
      updatePeriodSeconds: 1
    type: Rolling
  template:
    metadata:
      annotations:
        rollme: {{ randAlphaNum 5 | quote }}
      creationTimestamp: null
      labels:
        {{- include "nsfwapi.selectorLabels" . | nindent 8 }}
    spec:
      containers:
      - image: ''
        imagePullPolicy: Always
        name: {{ include "nsfwapi.name" . }}
        ports:
        ports:
        - containerPort: 5000
          protocol: TCP
        resources: {}
        terminationMessagePath: /dev/termination-log
        terminationMessagePolicy: File
        volumeMounts:
        - mountPath: /usr/local/bin/config.py
          name: apiconfig
          subPath: config.py
      dnsPolicy: ClusterFirst
      restartPolicy: Always
      schedulerName: default-scheduler
      securityContext: {}
      terminationGracePeriodSeconds: 30
      volumes:
      - configMap:
          defaultMode: 420
          name: apiconfig
        name: apiconfig
  test: false
  triggers:
  - type: ConfigChange
  - imageChangeParams:
      automatic: true
      containerNames:
      - {{ include "nsfwapi.name" . }}
      from:
        kind: ImageStreamTag
        name: {{ include "nsfwapi.fullname" . }}:latest
      lastTriggeredImage: ""
    type: ImageChange
---
apiVersion: route.openshift.io/v1
kind: Route
metadata:
  name: {{ include "nsfwapi.fullname" . }}
  labels:
    {{- include "nsfwapi.labels" . | nindent 4 }}
spec:
  port:
    targetPort: 5000
  tls:
    insecureEdgeTerminationPolicy: Redirect
    termination: edge
  to:
    kind: Service
    name: {{ include "nsfwapi.fullname" . }}
    weight: 100
  wildcardPolicy: None
status:
  ingress:
    - conditions:
        - status: 'True'
          type: Admitted
